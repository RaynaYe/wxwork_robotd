[package]
name = "wxwork_robotd"
version = "0.3.4"
authors = ["owent <admin@owent.net>"]

[dependencies]
serde = "^1.0.80"
serde_derive = "^1.0.80"
serde_json = "^1.0.33"
actix-web = ">=0.7.3"
futures = "^0.1.23"
tokio = ">=0.1.7"
tokio-io = ">=0.1.7"
tokio-process = ">=0.2.3"
log = ">=0.4.3"
time = ">=0.1.40"
hex = ">=0.3.2"
base64 = ">=0.9.2"
regex = "^1.0.6"
handlebars = "^1.1.0"
bytes = ">=0.4.11"
quick-xml = ">=0.13.1"
lazy_static = "^1.2.0"
# openssl = { version = ">=0.10.15", feature = ["vendored"] }
openssl = { version = ">=0.10.15" }
# openssl-sys = ">=0.9.39"
byteorder = "^1.2.7"

# fix version for dependencies
mio-uds = "^0.6.7"

[dependencies.clap]
version = "^2.32.0"
default-features = false
features = ["suggestions", "color"]

[build-dependencies.clap]
version = "^2.32.0"
default-features = false
features = ["suggestions", "color"]

[[bin]]
name = "wxwork_robotd"
# crate-type = ["staticlib"]

# The development profile, used for `cargo build`.
[profile.dev]
# opt-level = 0      # controls the `--opt-level` the compiler builds with.
                   # 0-1 is good for debugging. 2 is well-optimized. Max is 3.
debug = true       # include debug information (debug symbols). Equivalent to
                   # `-C debuginfo=2` compiler flag.
rpath = false      # controls whether compiler should set loader paths.
                   # If true, passes `-C rpath` flag to the compiler.
lto = false        # Link Time Optimization usually reduces size of binaries
                   # and static libraries. Increases compilation time.
                   # If true, passes `-C lto` flag to the compiler.
debug-assertions = true # controls whether debug assertions are enabled
                   # (e.g. debug_assert!() and arithmetic overflow checks)
codegen-units = 4  # if > 1 enables parallel code generation which improves
                   # compile times, but prevents some optimizations.
                   # Passes `-C codegen-units`. Ignored when `lto = true`.
incremental = false
panic = 'abort'    # panic strategy (`-C panic=...`), can also be 'abort'

# The release profile, used for `cargo build --release`.
[profile.release]
# opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
incremental = false
panic = 'abort'
opt-level = "z"

[target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "target-feature=+crt-static"]

[target.x86_64-unknown-linux-musl]
linker = "musl-gcc"

[features]
system-alloc = []